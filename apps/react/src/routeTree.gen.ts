/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const FramerMotionIndexLazyImport = createFileRoute('/framer-motion/')()
const CssAnimationIndexLazyImport = createFileRoute('/css-animation/')()
const FramerMotionInteractivityIndexLazyImport = createFileRoute(
  '/framer-motion/interactivity/',
)()
const CssAnimationStateIndexLazyImport = createFileRoute(
  '/css-animation/state/',
)()
const CssAnimationLayoutIndexLazyImport = createFileRoute(
  '/css-animation/layout/',
)()
const CssAnimationKeyframeIndexLazyImport = createFileRoute(
  '/css-animation/keyframe/',
)()
const CssAnimationChoreographyIndexLazyImport = createFileRoute(
  '/css-animation/choreography/',
)()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const FramerMotionIndexLazyRoute = FramerMotionIndexLazyImport.update({
  path: '/framer-motion/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/framer-motion/index.lazy').then((d) => d.Route),
)

const CssAnimationIndexLazyRoute = CssAnimationIndexLazyImport.update({
  path: '/css-animation/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/css-animation/index.lazy').then((d) => d.Route),
)

const FramerMotionInteractivityIndexLazyRoute =
  FramerMotionInteractivityIndexLazyImport.update({
    path: '/framer-motion/interactivity/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/framer-motion/interactivity/index.lazy').then(
      (d) => d.Route,
    ),
  )

const CssAnimationStateIndexLazyRoute = CssAnimationStateIndexLazyImport.update(
  {
    path: '/css-animation/state/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/css-animation/state/index.lazy').then((d) => d.Route),
)

const CssAnimationLayoutIndexLazyRoute =
  CssAnimationLayoutIndexLazyImport.update({
    path: '/css-animation/layout/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/css-animation/layout/index.lazy').then((d) => d.Route),
  )

const CssAnimationKeyframeIndexLazyRoute =
  CssAnimationKeyframeIndexLazyImport.update({
    path: '/css-animation/keyframe/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/css-animation/keyframe/index.lazy').then((d) => d.Route),
  )

const CssAnimationChoreographyIndexLazyRoute =
  CssAnimationChoreographyIndexLazyImport.update({
    path: '/css-animation/choreography/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/css-animation/choreography/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/css-animation/': {
      preLoaderRoute: typeof CssAnimationIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/framer-motion/': {
      preLoaderRoute: typeof FramerMotionIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/css-animation/choreography/': {
      preLoaderRoute: typeof CssAnimationChoreographyIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/css-animation/keyframe/': {
      preLoaderRoute: typeof CssAnimationKeyframeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/css-animation/layout/': {
      preLoaderRoute: typeof CssAnimationLayoutIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/css-animation/state/': {
      preLoaderRoute: typeof CssAnimationStateIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/framer-motion/interactivity/': {
      preLoaderRoute: typeof FramerMotionInteractivityIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  CssAnimationIndexLazyRoute,
  FramerMotionIndexLazyRoute,
  CssAnimationChoreographyIndexLazyRoute,
  CssAnimationKeyframeIndexLazyRoute,
  CssAnimationLayoutIndexLazyRoute,
  CssAnimationStateIndexLazyRoute,
  FramerMotionInteractivityIndexLazyRoute,
])

/* prettier-ignore-end */
